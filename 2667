#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

int map[25][25];
int danji[323];

int dir[4][2] = { {-1, 0}, {1, 0}, {0, -1}, {0, 1} };
int cnt;
int n;

bool isInside(int a, int b) {
	return (a >= 0 && a < n) && (b >= 0 && b < n);
}

void dfs(int a, int b, int key) {
	map[a][b] = key;

	for (int i = 0; i < 4; i++) {
		int dy = a + dir[i][0];
		int dx = b + dir[i][1];

		if (isInside(dy, dx) && map[dy][dx] == 1) {
			dfs(dy, dx, key);
		}
	}
}

void solution(int n) {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (map[i][j] == 1) {
				cnt++;
				dfs(i, j, cnt + 1);
			}
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (map[i][j] > 1) {
				danji[map[i][j] - 2]++;
			}
		}
	}
}
int main() {

	cin >> n;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			scanf("%1d", &map[i][j]);
		}
	}
	solution(n);
	sort(danji, danji + cnt);

	cout << cnt << "\n";
	for (int i = 0; i < cnt; i++) {
		cout << danji[i] << "\n";
	}
	return 0;
}
